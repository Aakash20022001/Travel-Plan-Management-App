[{"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/index.js":"1","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/App.js":"2","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/reportWebVitals.js":"3","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/HeaderComponent.jsx":"4","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/ListPlanComponent.jsx":"5","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/FooterComponent.jsx":"6","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/services/AdminService.jsx":"7","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/CreatePlanComponent.jsx":"8","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AuthComponents/UserLogin.jsx":"9","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AuthComponents/UserRegistrationComponent.jsx":"10","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/services/AuthService.jsx":"11","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/services/UserService.jsx":"12","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/RegisteredTravelPlanList.jsx":"13","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/AllTravelPlanList.jsx":"14","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/context/AuthContext.jsx":"15","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/UserHeaderComponent.jsx":"16","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/UserFooterComponent.jsx":"17","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/ViewUsersComponent.jsx":"18","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AboutUs.jsx":"19","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/ContactUs.jsx":"20","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/ViewPlanComponent.jsx":"21","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/UserProfileComponent.jsx":"22"},{"size":652,"mtime":1701141732074,"results":"23","hashOfConfig":"24"},{"size":2886,"mtime":1701352686978,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1700225207706,"results":"26","hashOfConfig":"24"},{"size":3204,"mtime":1701157233667,"results":"27","hashOfConfig":"24"},{"size":3745,"mtime":1701930549533,"results":"28","hashOfConfig":"24"},{"size":2119,"mtime":1701929674974,"results":"29","hashOfConfig":"24"},{"size":795,"mtime":1701929542001,"results":"30","hashOfConfig":"24"},{"size":8925,"mtime":1701928327964,"results":"31","hashOfConfig":"24"},{"size":3143,"mtime":1701148823189,"results":"32","hashOfConfig":"24"},{"size":7176,"mtime":1701141950765,"results":"33","hashOfConfig":"24"},{"size":435,"mtime":1701782661102,"results":"34","hashOfConfig":"24"},{"size":778,"mtime":1701782681043,"results":"35","hashOfConfig":"24"},{"size":3500,"mtime":1701060743908,"results":"36","hashOfConfig":"24"},{"size":5303,"mtime":1701930212648,"results":"37","hashOfConfig":"24"},{"size":1687,"mtime":1701067375794,"results":"38","hashOfConfig":"24"},{"size":2026,"mtime":1701352583158,"results":"39","hashOfConfig":"24"},{"size":2119,"mtime":1700919578525,"results":"40","hashOfConfig":"24"},{"size":1546,"mtime":1701150148688,"results":"41","hashOfConfig":"24"},{"size":231,"mtime":1701154214169,"results":"42","hashOfConfig":"24"},{"size":241,"mtime":1701154252659,"results":"43","hashOfConfig":"24"},{"size":2131,"mtime":1701156226799,"results":"44","hashOfConfig":"24"},{"size":1345,"mtime":1701352640643,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tsbgzm",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/index.js",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/App.js",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/reportWebVitals.js",[],[],["119","120","121","122","123","124"],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/HeaderComponent.jsx",["125","126"],[],"// HeaderComponent.jsx\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faList, faPlus, faSignInAlt, faUserPlus, faInfoCircle, faEnvelope, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useAuth } from '../../context/AuthContext';\nimport { toast } from 'react-hot-toast';\nconst HeaderComponent = () => {\n  const { isAuthenticated, role, logout } = useAuth();\n  const navigate = useNavigate();\n  const handleLogOut = () => {\n    toast.success(\"Admin Signed Out Successfully\");\n    logout();\n    //  navigate(\"/login\")\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ paddingLeft: 0, paddingRight: 0 }}>\n      <div className=\"container\">\n        <Link className=\"navbar-brand\" to=\"/admin-home\">\n          <FontAwesomeIcon icon={faList} /> Travel Plans\n        </Link>\n        <div className=\"collapse navbar-collapse text-light\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/admin-home\">\n                <FontAwesomeIcon icon={faList} /> All Plans\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/add-plan/-1\">\n                <FontAwesomeIcon icon={faPlus} /> Create Plan\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/about\">\n                <FontAwesomeIcon icon={faInfoCircle} /> About\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/contact\">\n                <FontAwesomeIcon icon={faEnvelope} /> Contact Us\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <div className=\"ml-auto\">\n          <ul className=\"navbar-nav\">\n            {isAuthenticated() && role === 'ROLE_ADMIN' && (\n              <>\n                {/* Admin-specific links */}\n                <li className=\"nav-item\">\n                  {/* <button className=\"nav-link btn btn-link\" onClick={handleLogOut}>\n                    <FontAwesomeIcon icon={faSignOutAlt} /> Logout\n                  </button> */}\n                  <Link className=\"nav-link\" to=\"/login\" onClick={handleLogOut}>\n                    <FontAwesomeIcon icon={faSignInAlt} /> Logout\n                  </Link>\n                </li>\n              </>\n            )}\n            {isAuthenticated() && role !== 'ROLE_ADMIN' && (\n              <>\n                {/* User-specific links */}\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/login\">\n                    <FontAwesomeIcon icon={faSignInAlt} /> Login\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/register\">\n                    <FontAwesomeIcon icon={faUserPlus} /> Register\n                  </Link>\n                </li>\n              </>\n            )}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default HeaderComponent;\n","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/ListPlanComponent.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/FooterComponent.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/services/AdminService.jsx",["127"],[],"import axios from 'axios';\n\nconst TravelPlan_API_BASE_URL=\"http://54.82.26.152:8088/api/v1/travelplans\";\n\nclass AdminService{\n\n    getAllPlans(){\n        return axios.get(TravelPlan_API_BASE_URL);\n    }\n    createPlan(travelPlan){\n        return axios.post(TravelPlan_API_BASE_URL,travelPlan)\n    }\n    getPlanById(travelPlanId){\n         return axios.get(TravelPlan_API_BASE_URL+'/'+travelPlanId)\n    }\n    updatePlan(travelPlan,travelPlanId){\n        return axios.put(TravelPlan_API_BASE_URL+'/'+travelPlanId,travelPlan)\n    }\n    deletePlan(travelPlanId){\n        return axios.delete(TravelPlan_API_BASE_URL+'/'+travelPlanId)\n    }\n    getRegisteredUsers(travelPlanId) {\n        return axios.get(TravelPlan_API_BASE_URL+'/'+travelPlanId+'/users');\n      }\n}\nexport default new AdminService()\n","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/CreatePlanComponent.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AuthComponents/UserLogin.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AuthComponents/UserRegistrationComponent.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/services/AuthService.jsx",["128"],[],"import axios from 'axios';\n\nconst TravelPlanUser_API_BASE_URL=\"http://54.82.26.152:8088/api/v1/users\";\nclass AuthService{\n    getAllUser(){\n        return axios.get(TravelPlanUser_API_BASE_URL);\n    }\ncreateUser(UserData){\n    return axios.post(TravelPlanUser_API_BASE_URL+\"/save\", UserData)\n}\nauthenticateUser(UserRequest){\n    return axios.post(TravelPlanUser_API_BASE_URL+\"/login\", UserRequest)\n}\n}\nexport default new AuthService();","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/services/UserService.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/RegisteredTravelPlanList.jsx",["129"],[],"// RegisteredTravelPlanList.js\nimport React, { useState, useEffect } from 'react';\nimport UserService from '../../services/UserService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { useAuth } from '../../context/AuthContext';\nimport { Link } from 'react-router-dom';\n\nexport default function RegisteredTravelPlanList() {\n  const [travelPlans, setTravelPlans] = useState([]);\n  const { userId } = useAuth(); // Use userId from AuthContext\n\n  const fetchTravelPlans = () => {\n    UserService.getUserById(userId)\n      .then((response) => {\n        setTravelPlans(response.data.registeredTravelPlans);\n      })\n      .catch((error) => {\n        console.error('Error fetching user details:', error);\n      });\n  };\n\n  const handleDeregister = (travelPlanId) => {\n    // Display confirmation prompt\n    const confirmDeregister = window.confirm('Are you sure you want to deregister from this travel plan?');\n    \n    // If user confirms, proceed with deregistration\n    if (confirmDeregister) {\n      UserService.deregisterUserFromTravelPlan(userId, travelPlanId)\n        .then(() => {\n          // Refresh travel plans after deregistration\n          fetchTravelPlans();\n        })\n        .catch((error) => {\n          console.error('Error deregistering user:', error);\n        });\n    }\n  };\n\n  useEffect(() => {\n    // Fetch travel plans on component mount\n    fetchTravelPlans();\n  }, []);\n\n  return (\n    <div>\n      <h2 className='text-center'>Registered Travel Plans</h2>\n      {travelPlans.length === 0 ? (\n        <p className='text-center'>You have not registered for any plan yet. <Link to='/user-home'>Register for plans</Link>.</p>\n      ) : (\n        <div className='row'>\n          {travelPlans.map((travelPlan) => (\n            <div className='col-md-4 mt-3 mb-4' key={travelPlan.id}>\n              <div className='card'>\n                <img\n                  src={travelPlan.imageUrl}\n                  className='card-img-top'\n                  alt='Travel Plan'\n                />\n                <div className='card-body'>\n                  <h5 className='card-title'>\n                    {travelPlan.origin}{' '}\n                    <FontAwesomeIcon icon={faArrowRight} /> {travelPlan.destination}\n                  </h5>\n                  <p className='card-text'>{travelPlan.description}</p>\n                  <p className='card-text'>\n                    <strong>Start Date:</strong> {travelPlan.startDate}\n                  </p>\n                  <p className='card-text'>\n                    <strong>End Date:</strong> {travelPlan.endDate}\n                  </p>\n                  <p className='card-text'>\n                    <strong>Budget:</strong> {travelPlan.budget}\n                  </p>\n                  <div className='btn-group'>\n                    <button\n                      className='btn btn-danger'\n                      onClick={() => handleDeregister(travelPlan.id)}\n                    >\n                      Deregister\n                    </button>\n                    <button\n                      className='btn btn-info ml-3'\n                      onClick={() => console.log('View clicked')}\n                    >\n                      <FontAwesomeIcon icon={faEye} /> View\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/AllTravelPlanList.jsx",["130"],[],"import React, { useState, useEffect } from 'react';\nimport UserService from '../../services/UserService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { toast, Toaster } from 'react-hot-toast';\n\nexport default function AllTravelPlanList() {\n  const [allTravelPlans, setAllTravelPlans] = useState([]);\n  const [registeredTravelPlans, setRegisteredTravelPlans] = useState([]);\n  const { userId, isAuthenticated } = useAuth();\n  const navigate = useNavigate();\n\n  const fetchAllTravelPlans = () => {\n    UserService.getAllTravelPlans()\n      .then((response) => {\n        const formattedData = response.data.map((travelPlan) => ({\n          ...travelPlan,\n          start_date: new Date(travelPlan.start_date).toLocaleDateString('en-GB'),\n          end_date: new Date(travelPlan.end_date).toLocaleDateString('en-GB'),\n        }));\n  \n        setAllTravelPlans(formattedData);\n      })\n      .catch((error) => {\n        console.error('Error fetching all travel plans:', error);\n      });\n  };\n\n  const fetchRegisteredTravelPlans = () => {\n    if (!userId) {\n      return;\n    }\n    UserService.getUserById(userId)\n      .then((response) => {\n        setRegisteredTravelPlans(response.data.registeredTravelPlans);\n      })\n      .catch((error) => {\n        console.error('Error fetching registered travel plans:', error);\n      });\n  };\n\n  const handleRegister = (travelPlanId, isRegistered) => {\n    if (isAuthenticated()) {\n      const confirmRegister = window.confirm(\n        `Are you sure you want to ${\n          isRegistered ? 'deregister from' : 'register for'\n        } this travel plan?`\n      );\n      if (!confirmRegister) {\n        return;\n      }\n    } else {\n      const confirmLoginOrRegister = window.confirm(\n        'You are not logged in. Do you want to log in or register?'\n      );\n      if (confirmLoginOrRegister) {\n        navigate('/login');\n      } else {\n        navigate('/register');\n      }\n      return;\n    }\n\n    const registerPromise = isRegistered\n      ? UserService.deregisterUserFromTravelPlan(userId, travelPlanId)\n      : UserService.registerUserToTravelPlan(userId, travelPlanId);\n\n    registerPromise\n      .then(() => {\n        fetchAllTravelPlans();\n        fetchRegisteredTravelPlans();\n        toast.success(\n          `Successfully ${\n            isRegistered ? 'deregistered from' : 'registered for'\n          } the travel plan.`\n        );\n      })\n      .catch((error) => {\n        console.error('Error registering/deregistering user:', error);\n        toast.error('Error occurred. Please try again.');\n      });\n  };\n\n  const isRegistered = (travelPlanId) => {\n    return registeredTravelPlans.some((plan) => plan.id === travelPlanId);\n  };\n\n  const handleViewDetails = (travelPlanId) => {\n    // Redirect to the view details page for the specific travel plan\n    navigate(`/view-plan/${travelPlanId}`);\n  };\n\n  useEffect(() => {\n    fetchAllTravelPlans();\n    fetchRegisteredTravelPlans();\n  }, [userId]);\n\n  return (\n    <div>\n      <h2 className='text-center'>All Travel Plans</h2>\n      <Toaster />\n      <div className='row'>\n        {allTravelPlans.map((travelPlan) => (\n          <div className='col-md-4 mt-3' key={travelPlan.id}>\n            <div className='card'>\n              <img\n                src={travelPlan.image_url}\n                className='card-img-top'  width={348}\n                height={232}\n                alt='Travel Plan'\n              />\n              <div className='card-body'>\n                <h5 className='card-title'>\n                  {travelPlan.origin} <FontAwesomeIcon icon={faArrowRight} />{' '}\n                  {travelPlan.destination}\n                </h5>\n                <p className='card-text'>{travelPlan.description}</p>\n                <p className='card-text'>\n                  <strong>Start Date:</strong> {travelPlan.start_date}\n                </p>\n                <p className='card-text'>\n                  <strong>End Date:</strong> {travelPlan.end_date}\n                </p>\n                <p className='card-text'>\n                  <strong>Budget:</strong> {travelPlan.budget}\n                </p>\n                <div className='btn-group mt-2'>\n                  {isRegistered(travelPlan.id) ? (\n                    <button\n                      className='btn btn-danger'\n                      onClick={() => handleRegister(travelPlan.id, true)}\n                    >\n                      Deregister\n                    </button>\n                  ) : (\n                    <button\n                      className='btn btn-success'\n                      onClick={() => handleRegister(travelPlan.id, false)}\n                    >\n                      Register\n                    </button>\n                  )}\n                  <button\n                    className='btn btn-info ml-2'\n                    onClick={() => handleViewDetails(travelPlan.id)}\n                  >\n                    <FontAwesomeIcon icon={faEye} /> View\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/context/AuthContext.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/UserHeaderComponent.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/UserFooterComponent.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/ViewUsersComponent.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AboutUs.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/ContactUs.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/ViewPlanComponent.jsx",[],[],["131","132","133","134","135","136"],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/UserProfileComponent.jsx",[],[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":5,"column":77,"nodeType":"151","messageId":"152","endLine":5,"endColumn":89},{"ruleId":"149","severity":1,"message":"153","line":10,"column":9,"nodeType":"151","messageId":"152","endLine":10,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":26,"column":1,"nodeType":"156","endLine":26,"endColumn":34},{"ruleId":"154","severity":1,"message":"155","line":15,"column":1,"nodeType":"156","endLine":15,"endColumn":34},{"ruleId":"157","severity":1,"message":"158","line":43,"column":6,"nodeType":"159","endLine":43,"endColumn":8,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"161","line":98,"column":6,"nodeType":"159","endLine":98,"endColumn":14,"suggestions":"162"},{"ruleId":"137","replacedBy":"163"},{"ruleId":"139","replacedBy":"164"},{"ruleId":"141","replacedBy":"165"},{"ruleId":"143","replacedBy":"166"},{"ruleId":"145","replacedBy":"167"},{"ruleId":"147","replacedBy":"168"},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["169"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'faSignOutAlt' is defined but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTravelPlans'. Either include it or remove the dependency array.","ArrayExpression",["170"],"React Hook useEffect has a missing dependency: 'fetchRegisteredTravelPlans'. Either include it or remove the dependency array.",["171"],[],[],[],["169"],[],[],"no-object-constructor",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [fetchTravelPlans]",{"range":"176","text":"177"},"Update the dependencies array to be: [fetchRegisteredTravelPlans, userId]",{"range":"178","text":"179"},[1486,1488],"[fetchTravelPlans]",[3145,3153],"[fetchRegisteredTravelPlans, userId]"]