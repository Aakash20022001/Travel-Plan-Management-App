[{"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/index.js":"1","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/App.js":"2","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/reportWebVitals.js":"3","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/HeaderComponent.jsx":"4","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/ListPlanComponent.jsx":"5","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/FooterComponent.jsx":"6","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/services/AdminService.jsx":"7","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/CreatePlanComponent.jsx":"8","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AuthComponents/UserLogin.jsx":"9","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AuthComponents/UserRegistrationComponent.jsx":"10","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/services/AuthService.jsx":"11","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/services/UserService.jsx":"12","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/RegisteredTravelPlanList.jsx":"13","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/AllTravelPlanList.jsx":"14","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/context/AuthContext.jsx":"15","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/UserHeaderComponent.jsx":"16","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/UserFooterComponent.jsx":"17","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/ViewUsersComponent.jsx":"18","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AboutUs.jsx":"19","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/ContactUs.jsx":"20","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/ViewPlanComponent.jsx":"21","/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/UserProfileComponent.jsx":"22"},{"size":652,"mtime":1701141732074,"results":"23","hashOfConfig":"24"},{"size":2886,"mtime":1701352686978,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1700225207706,"results":"26","hashOfConfig":"24"},{"size":3204,"mtime":1701157233667,"results":"27","hashOfConfig":"24"},{"size":3703,"mtime":1701156700065,"results":"28","hashOfConfig":"24"},{"size":2119,"mtime":1700624747078,"results":"29","hashOfConfig":"24"},{"size":795,"mtime":1701782641057,"results":"30","hashOfConfig":"24"},{"size":8953,"mtime":1701149580028,"results":"31","hashOfConfig":"24"},{"size":3143,"mtime":1701148823189,"results":"32","hashOfConfig":"24"},{"size":7176,"mtime":1701141950765,"results":"33","hashOfConfig":"24"},{"size":435,"mtime":1701782661102,"results":"34","hashOfConfig":"24"},{"size":778,"mtime":1701782681043,"results":"35","hashOfConfig":"24"},{"size":3500,"mtime":1701060743908,"results":"36","hashOfConfig":"24"},{"size":5261,"mtime":1701350623592,"results":"37","hashOfConfig":"24"},{"size":1687,"mtime":1701067375794,"results":"38","hashOfConfig":"24"},{"size":2026,"mtime":1701352583158,"results":"39","hashOfConfig":"24"},{"size":2119,"mtime":1700919578525,"results":"40","hashOfConfig":"24"},{"size":1546,"mtime":1701150148688,"results":"41","hashOfConfig":"24"},{"size":231,"mtime":1701154214169,"results":"42","hashOfConfig":"24"},{"size":241,"mtime":1701154252659,"results":"43","hashOfConfig":"24"},{"size":2131,"mtime":1701156226799,"results":"44","hashOfConfig":"24"},{"size":1345,"mtime":1701352640643,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tsbgzm",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/index.js",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/App.js",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/reportWebVitals.js",[],[],["115","116","117","118","119","120"],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/HeaderComponent.jsx",["121","122"],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/ListPlanComponent.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/FooterComponent.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/services/AdminService.jsx",["123"],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/CreatePlanComponent.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AuthComponents/UserLogin.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AuthComponents/UserRegistrationComponent.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/services/AuthService.jsx",["124"],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/services/UserService.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/RegisteredTravelPlanList.jsx",["125"],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/AllTravelPlanList.jsx",["126"],[],"import React, { useState, useEffect } from 'react';\nimport UserService from '../../services/UserService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { toast, Toaster } from 'react-hot-toast';\n\nexport default function AllTravelPlanList() {\n  const [allTravelPlans, setAllTravelPlans] = useState([]);\n  const [registeredTravelPlans, setRegisteredTravelPlans] = useState([]);\n  const { userId, isAuthenticated } = useAuth();\n  const navigate = useNavigate();\n\n  const fetchAllTravelPlans = () => {\n    UserService.getAllTravelPlans()\n      .then((response) => {\n        const formattedData = response.data.map((travelPlan) => ({\n          ...travelPlan,\n          start_date: new Date(travelPlan.start_date).toLocaleDateString('en-GB'),\n          end_date: new Date(travelPlan.end_date).toLocaleDateString('en-GB'),\n        }));\n  \n        setAllTravelPlans(formattedData);\n      })\n      .catch((error) => {\n        console.error('Error fetching all travel plans:', error);\n      });\n  };\n\n  const fetchRegisteredTravelPlans = () => {\n    if (!userId) {\n      return;\n    }\n    UserService.getUserById(userId)\n      .then((response) => {\n        setRegisteredTravelPlans(response.data.registeredTravelPlans);\n      })\n      .catch((error) => {\n        console.error('Error fetching registered travel plans:', error);\n      });\n  };\n\n  const handleRegister = (travelPlanId, isRegistered) => {\n    if (isAuthenticated()) {\n      const confirmRegister = window.confirm(\n        `Are you sure you want to ${\n          isRegistered ? 'deregister from' : 'register for'\n        } this travel plan?`\n      );\n      if (!confirmRegister) {\n        return;\n      }\n    } else {\n      const confirmLoginOrRegister = window.confirm(\n        'You are not logged in. Do you want to log in or register?'\n      );\n      if (confirmLoginOrRegister) {\n        navigate('/login');\n      } else {\n        navigate('/register');\n      }\n      return;\n    }\n\n    const registerPromise = isRegistered\n      ? UserService.deregisterUserFromTravelPlan(userId, travelPlanId)\n      : UserService.registerUserToTravelPlan(userId, travelPlanId);\n\n    registerPromise\n      .then(() => {\n        fetchAllTravelPlans();\n        fetchRegisteredTravelPlans();\n        toast.success(\n          `Successfully ${\n            isRegistered ? 'deregistered from' : 'registered for'\n          } the travel plan.`\n        );\n      })\n      .catch((error) => {\n        console.error('Error registering/deregistering user:', error);\n        toast.error('Error occurred. Please try again.');\n      });\n  };\n\n  const isRegistered = (travelPlanId) => {\n    return registeredTravelPlans.some((plan) => plan.id === travelPlanId);\n  };\n\n  const handleViewDetails = (travelPlanId) => {\n    // Redirect to the view details page for the specific travel plan\n    navigate(`/view-plan/${travelPlanId}`);\n  };\n\n  useEffect(() => {\n    fetchAllTravelPlans();\n    fetchRegisteredTravelPlans();\n  }, [userId]);\n\n  return (\n    <div>\n      <h2 className='text-center'>All Travel Plans</h2>\n      <Toaster />\n      <div className='row'>\n        {allTravelPlans.map((travelPlan) => (\n          <div className='col-md-4 mt-3' key={travelPlan.id}>\n            <div className='card'>\n              <img\n                src={travelPlan.image_url}\n                className='card-img-top'\n                alt='Travel Plan'\n              />\n              <div className='card-body'>\n                <h5 className='card-title'>\n                  {travelPlan.origin} <FontAwesomeIcon icon={faArrowRight} />{' '}\n                  {travelPlan.destination}\n                </h5>\n                <p className='card-text'>{travelPlan.description}</p>\n                <p className='card-text'>\n                  <strong>Start Date:</strong> {travelPlan.start_date}\n                </p>\n                <p className='card-text'>\n                  <strong>End Date:</strong> {travelPlan.end_date}\n                </p>\n                <p className='card-text'>\n                  <strong>Budget:</strong> {travelPlan.budget}\n                </p>\n                <div className='btn-group mt-2'>\n                  {isRegistered(travelPlan.id) ? (\n                    <button\n                      className='btn btn-danger'\n                      onClick={() => handleRegister(travelPlan.id, true)}\n                    >\n                      Deregister\n                    </button>\n                  ) : (\n                    <button\n                      className='btn btn-success'\n                      onClick={() => handleRegister(travelPlan.id, false)}\n                    >\n                      Register\n                    </button>\n                  )}\n                  <button\n                    className='btn btn-info ml-2'\n                    onClick={() => handleViewDetails(travelPlan.id)}\n                  >\n                    <FontAwesomeIcon icon={faEye} /> View\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}",["127","128","129","130","131","132"],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/context/AuthContext.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/UserHeaderComponent.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/UserFooterComponent.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AdminComponents/ViewUsersComponent.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/AboutUs.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/ContactUs.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/ViewPlanComponent.jsx",[],[],"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/UserProfileComponent.jsx",[],[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":5,"column":77,"nodeType":"147","messageId":"148","endLine":5,"endColumn":89},{"ruleId":"145","severity":1,"message":"149","line":10,"column":9,"nodeType":"147","messageId":"148","endLine":10,"endColumn":17},{"ruleId":"150","severity":1,"message":"151","line":26,"column":1,"nodeType":"152","endLine":26,"endColumn":34},{"ruleId":"150","severity":1,"message":"151","line":15,"column":1,"nodeType":"152","endLine":15,"endColumn":34},{"ruleId":"153","severity":1,"message":"154","line":43,"column":6,"nodeType":"155","endLine":43,"endColumn":8,"suggestions":"156"},{"ruleId":"153","severity":1,"message":"157","line":98,"column":6,"nodeType":"155","endLine":98,"endColumn":14,"suggestions":"158"},{"ruleId":"133","replacedBy":"159"},{"ruleId":"135","replacedBy":"160"},{"ruleId":"137","replacedBy":"161"},{"ruleId":"139","replacedBy":"162"},{"ruleId":"141","replacedBy":"163"},{"ruleId":"143","replacedBy":"164"},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["165"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'faSignOutAlt' is defined but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTravelPlans'. Either include it or remove the dependency array.","ArrayExpression",["166"],"React Hook useEffect has a missing dependency: 'fetchRegisteredTravelPlans'. Either include it or remove the dependency array.",["167"],[],[],[],["165"],[],[],"no-object-constructor",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [fetchTravelPlans]",{"range":"172","text":"173"},"Update the dependencies array to be: [fetchRegisteredTravelPlans, userId]",{"range":"174","text":"175"},[1486,1488],"[fetchTravelPlans]",[3145,3153],"[fetchRegisteredTravelPlans, userId]"]