{"ast":null,"code":"var _jsxFileName = \"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/TravelPlanList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport UserService from '../../services/UserService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt, faEye, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListPlanComponent() {\n  _s();\n  const [travelplans, setTravelPlans] = useState([]);\n  const [registeredPlans, setRegisteredPlans] = useState([]);\n  const navigate = useNavigate();\n  const registerUser = travelPlanId => {\n    UserService.registerUserToTravelPlan(travelPlanId).then(() => {\n      setRegisteredPlans(prevRegistered => [...prevRegistered, travelPlanId]);\n    }).catch(error => {\n      console.error('Error registering user:', error);\n    });\n  };\n  const deregisterUser = travelPlanId => {\n    UserService.deregisterUserFromTravelPlan(travelPlanId).then(() => {\n      setRegisteredPlans(prevRegistered => prevRegistered.filter(id => id !== travelPlanId));\n    }).catch(error => {\n      console.error('Error deregistering user:', error);\n    });\n  };\n  const isRegistered = travelPlanId => registeredPlans.includes(travelPlanId);\n  const viewPlan = id => {\n    navigate(`/view-plan/${id}`);\n  };\n  useEffect(() => {\n    const fetchData = () => {\n      UserService.getAllPlans().then(response => {\n        setTravelPlans(response.data);\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n      });\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Travel Plans\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: travelplans.map(travelPlan => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: travelPlan.imageUrl,\n            className: \"card-img-top\",\n            alt: \"Travel Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: [travelPlan.origin, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faArrowRight\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 39\n              }, this), \" \", travelPlan.destination]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: travelPlan.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Start Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), \" \", travelPlan.startDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"End Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), \" \", travelPlan.endDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Budget:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), \" \", travelPlan.budget]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => viewPlan(travelPlan.id),\n                className: \"btn btn-info\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faEye\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this), \" View\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), isRegistered(travelPlan.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deregisterUser(travelPlan.id),\n                className: \"btn btn-danger\",\n                children: \"Deregister\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => registerUser(travelPlan.id),\n                className: \"btn btn-success\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, travelPlan.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(ListPlanComponent, \"WnUrGQeTT2TwIA8hKbx4m6hQEoI=\", false, function () {\n  return [useNavigate];\n});\n_c = ListPlanComponent;\nvar _c;\n$RefreshReg$(_c, \"ListPlanComponent\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","UserService","FontAwesomeIcon","faEdit","faTrashAlt","faEye","faArrowRight","jsxDEV","_jsxDEV","ListPlanComponent","_s","travelplans","setTravelPlans","registeredPlans","setRegisteredPlans","navigate","registerUser","travelPlanId","registerUserToTravelPlan","then","prevRegistered","catch","error","console","deregisterUser","deregisterUserFromTravelPlan","filter","id","isRegistered","includes","viewPlan","fetchData","getAllPlans","response","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","travelPlan","src","imageUrl","alt","origin","icon","destination","description","startDate","endDate","budget","onClick","_c","$RefreshReg$"],"sources":["/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/TravelPlanList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport UserService from '../../services/UserService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt, faEye, faArrowRight } from '@fortawesome/free-solid-svg-icons';\n\nexport default function ListPlanComponent() {\n  const [travelplans, setTravelPlans] = useState([]);\n  const [registeredPlans, setRegisteredPlans] = useState([]);\n  const navigate = useNavigate();\n\n  const registerUser = (travelPlanId) => {\n    UserService.registerUserToTravelPlan(travelPlanId)\n      .then(() => {\n        setRegisteredPlans((prevRegistered) => [...prevRegistered, travelPlanId]);\n      })\n      .catch((error) => {\n        console.error('Error registering user:', error);\n      });\n  };\n\n  const deregisterUser = (travelPlanId) => {\n    UserService.deregisterUserFromTravelPlan(travelPlanId)\n      .then(() => {\n        setRegisteredPlans((prevRegistered) =>\n          prevRegistered.filter((id) => id !== travelPlanId)\n        );\n      })\n      .catch((error) => {\n        console.error('Error deregistering user:', error);\n      });\n  };\n\n  const isRegistered = (travelPlanId) => registeredPlans.includes(travelPlanId);\n\n  const viewPlan = (id) => {\n    navigate(`/view-plan/${id}`);\n  };\n\n  useEffect(() => {\n    const fetchData = () => {\n      UserService.getAllPlans()\n        .then((response) => {\n          setTravelPlans(response.data);\n        })\n        .catch((error) => {\n          console.error('Error fetching data:', error);\n        });\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h2 className='text-center'>Travel Plans</h2>\n      <div className='row'>\n        {travelplans.map((travelPlan) => (\n          <div className='col-md-4 mt-3' key={travelPlan.id}>\n            <div className='card'>\n              <img src={travelPlan.imageUrl} className='card-img-top' alt='Travel Plan' />\n              <div className='card-body'>\n                <h5 className='card-title'>\n                  {travelPlan.origin} <FontAwesomeIcon icon={faArrowRight} /> {travelPlan.destination}\n                </h5>\n                <p className='card-text'>{travelPlan.description}</p>\n                <p className='card-text'>\n                  <strong>Start Date:</strong> {travelPlan.startDate}\n                </p>\n                <p className='card-text'>\n                  <strong>End Date:</strong> {travelPlan.endDate}\n                </p>\n                <p className='card-text'>\n                  <strong>Budget:</strong> {travelPlan.budget}\n                </p>\n                <div className='btn-group'>\n                  <button\n                    onClick={() => viewPlan(travelPlan.id)}\n                    className='btn btn-info'\n                  >\n                    <FontAwesomeIcon icon={faEye} /> View\n                  </button>\n                  {isRegistered(travelPlan.id) ? (\n                    <button\n                      onClick={() => deregisterUser(travelPlan.id)}\n                      className='btn btn-danger'\n                    >\n                      Deregister\n                    </button>\n                  ) : (\n                    <button\n                      onClick={() => registerUser(travelPlan.id)}\n                      className='btn btn-success'\n                    >\n                      Register\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}