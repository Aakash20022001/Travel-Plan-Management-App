{"ast":null,"code":"var _jsxFileName = \"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/AllTravelPlanList.jsx\",\n  _s = $RefreshSig$();\n// UserPage.js\nimport React, { useState, useEffect } from 'react';\nimport UserService from '../../services/UserService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { useAuth } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllTravelPlanList() {\n  _s();\n  const [allTravelPlans, setAllTravelPlans] = useState([]);\n  const [registeredTravelPlans, setRegisteredTravelPlans] = useState([]);\n  const {\n    userId\n  } = useAuth();\n  console.log(\"All TravelPlan List\" + userId);\n  //   console.log(userId);\n  const fetchAllTravelPlans = () => {\n    // Fetch all travel plans\n    // Update the API call based on your actual API structure\n    UserService.getAllTravelPlans().then(response => {\n      setAllTravelPlans(response.data);\n    }).catch(error => {\n      console.error('Error fetching all travel plans:', error);\n    });\n  };\n  const fetchRegisteredTravelPlans = () => {\n    // Fetch registered travel plans for the user\n\n    console.log(\"fetchRegistered\" + userId);\n    UserService.getUserById(userId).then(response => {\n      setRegisteredTravelPlans(response.data.registeredTravelPlans);\n    }).catch(error => {\n      console.error('Error fetching registered travel plans:', error);\n    });\n  };\n  const handleRegister = (travelPlanId, isRegistered) => {\n    const registerPromise = isRegistered ? UserService.deregisterUserFromTravelPlan(userId, travelPlanId) : UserService.registerUserToTravelPlan(userId, travelPlanId);\n    registerPromise.then(() => {\n      // Refresh travel plans after registration/deregistration\n      fetchAllTravelPlans();\n      fetchRegisteredTravelPlans();\n    }).catch(error => {\n      console.error('Error registering/deregistering user:', error);\n    });\n  };\n  useEffect(() => {\n    // Fetch all travel plans and registered travel plans on component mount\n    fetchAllTravelPlans();\n    fetchRegisteredTravelPlans();\n  }, []);\n\n  // Function to check if a travel plan is registered by the user\n  const isRegistered = travelPlanId => {\n    return registeredTravelPlans.some(plan => plan.id === travelPlanId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"All Travel Plans\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: allTravelPlans.map(travelPlan => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: travelPlan.imageUrl,\n            className: \"card-img-top\",\n            alt: \"Travel Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: [travelPlan.origin, ' ', /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faArrowRight\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), \" \", travelPlan.destination]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: travelPlan.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Start Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), \" \", travelPlan.startDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"End Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), \" \", travelPlan.endDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Budget:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), \" \", travelPlan.budget]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-group mt-2\",\n              children: [isRegistered(travelPlan.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => handleRegister(travelPlan.id, true),\n                children: \"Deregister\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                onClick: () => handleRegister(travelPlan.id, false),\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-info ml-2\",\n                onClick: () => console.log('View clicked'),\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faEye\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this), \" View\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, travelPlan.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(AllTravelPlanList, \"H0r5unFHXPy6xM3TDXNHMRcKaz8=\", false, function () {\n  return [useAuth];\n});\n_c = AllTravelPlanList;\nvar _c;\n$RefreshReg$(_c, \"AllTravelPlanList\");","map":{"version":3,"names":["React","useState","useEffect","UserService","FontAwesomeIcon","faEye","faArrowRight","useAuth","jsxDEV","_jsxDEV","AllTravelPlanList","_s","allTravelPlans","setAllTravelPlans","registeredTravelPlans","setRegisteredTravelPlans","userId","console","log","fetchAllTravelPlans","getAllTravelPlans","then","response","data","catch","error","fetchRegisteredTravelPlans","getUserById","handleRegister","travelPlanId","isRegistered","registerPromise","deregisterUserFromTravelPlan","registerUserToTravelPlan","some","plan","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","travelPlan","src","imageUrl","alt","origin","icon","destination","description","startDate","endDate","budget","onClick","_c","$RefreshReg$"],"sources":["/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/AllTravelPlanList.jsx"],"sourcesContent":["// UserPage.js\nimport React, { useState, useEffect } from 'react';\nimport UserService from '../../services/UserService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { useAuth } from '../../context/AuthContext'; \nexport default function AllTravelPlanList() {\n  const [allTravelPlans, setAllTravelPlans] = useState([]);\n  const [registeredTravelPlans, setRegisteredTravelPlans] = useState([]);\n  const {userId} = useAuth(); \n  console.log(\"All TravelPlan List\"+userId);\n//   console.log(userId);\n  const fetchAllTravelPlans = () => {\n    // Fetch all travel plans\n    // Update the API call based on your actual API structure\n    UserService.getAllTravelPlans()\n      .then((response) => {\n        setAllTravelPlans(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching all travel plans:', error);\n      });\n  };\n\n  const fetchRegisteredTravelPlans = () => {\n    // Fetch registered travel plans for the user\n    \n    console.log(\"fetchRegistered\"+userId)\n    UserService.getUserById(userId)\n      .then((response) => {\n        setRegisteredTravelPlans(response.data.registeredTravelPlans);\n      })\n      .catch((error) => {\n        console.error('Error fetching registered travel plans:', error);\n      });\n  };\n\n  const handleRegister = (travelPlanId, isRegistered) => {\n    const registerPromise = isRegistered\n      ? UserService.deregisterUserFromTravelPlan(userId, travelPlanId)\n      : UserService.registerUserToTravelPlan(userId, travelPlanId);\n\n    registerPromise\n      .then(() => {\n        // Refresh travel plans after registration/deregistration\n        fetchAllTravelPlans();\n        fetchRegisteredTravelPlans();\n      })\n      .catch((error) => {\n        console.error('Error registering/deregistering user:', error);\n      });\n  };\n\n  useEffect(() => {\n    // Fetch all travel plans and registered travel plans on component mount\n    fetchAllTravelPlans();\n    fetchRegisteredTravelPlans();\n  }, []);\n\n  // Function to check if a travel plan is registered by the user\n  const isRegistered = (travelPlanId) => {\n    return registeredTravelPlans.some((plan) => plan.id === travelPlanId);\n  };\n\n  return (\n    <div>\n      <h2 className='text-center'>All Travel Plans</h2>\n      <div className='row'>\n        {allTravelPlans.map((travelPlan) => (\n          <div className='col-md-4 mt-3' key={travelPlan.id}>\n            <div className='card'>\n              <img\n                src={travelPlan.imageUrl}\n                className='card-img-top'\n                alt='Travel Plan'\n              />\n              <div className='card-body'>\n                <h5 className='card-title'>\n                  {travelPlan.origin}{' '}\n                  <FontAwesomeIcon icon={faArrowRight} /> {travelPlan.destination}\n                </h5>\n                <p className='card-text'>{travelPlan.description}</p>\n                <p className='card-text'>\n                  <strong>Start Date:</strong> {travelPlan.startDate}\n                </p>\n                <p className='card-text'>\n                  <strong>End Date:</strong> {travelPlan.endDate}\n                </p>\n                <p className='card-text'>\n                  <strong>Budget:</strong> {travelPlan.budget}\n                </p>\n                <div className='btn-group mt-2'>\n                  {isRegistered(travelPlan.id) ? (\n                    <button\n                      className='btn btn-danger'\n                      onClick={() => handleRegister(travelPlan.id, true)}\n                    >\n                      Deregister\n                    </button>\n                  ) : (\n                    <button\n                      className='btn btn-success'\n                      onClick={() => handleRegister(travelPlan.id, false)}\n                    >\n                      Register\n                    </button>\n                  )}\n                  <button\n                    className='btn btn-info ml-2'\n                    onClick={() => console.log('View clicked')}\n                  >\n                    <FontAwesomeIcon icon={faEye} /> View\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}