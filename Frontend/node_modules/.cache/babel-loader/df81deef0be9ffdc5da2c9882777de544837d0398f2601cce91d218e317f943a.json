{"ast":null,"code":"import React,{useState,useEffect}from'react';import UserService from'../../services/UserService';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faEye,faArrowRight}from'@fortawesome/free-solid-svg-icons';import{useAuth}from'../../context/AuthContext';import{useNavigate}from'react-router-dom';import{toast,Toaster}from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AllTravelPlanList(){const[allTravelPlans,setAllTravelPlans]=useState([]);const[registeredTravelPlans,setRegisteredTravelPlans]=useState([]);const{userId,isAuthenticated}=useAuth();const navigate=useNavigate();const fetchAllTravelPlans=()=>{UserService.getAllTravelPlans().then(response=>{const formattedData=response.data.map(travelPlan=>({...travelPlan,start_date:new Date(travelPlan.start_date).toLocaleDateString('en-GB'),end_date:new Date(travelPlan.end_date).toLocaleDateString('en-GB')}));setAllTravelPlans(formattedData);}).catch(error=>{console.error('Error fetching all travel plans:',error);});};const fetchRegisteredTravelPlans=()=>{if(!userId){return;}UserService.getUserById(userId).then(response=>{setRegisteredTravelPlans(response.data.registeredTravelPlans);}).catch(error=>{console.error('Error fetching registered travel plans:',error);});};const handleRegister=(travelPlanId,isRegistered)=>{if(isAuthenticated()){const confirmRegister=window.confirm(\"Are you sure you want to \".concat(isRegistered?'deregister from':'register for',\" this travel plan?\"));if(!confirmRegister){return;}}else{const confirmLoginOrRegister=window.confirm('You are not logged in. Do you want to log in or register?');if(confirmLoginOrRegister){navigate('/login');}else{navigate('/register');}return;}const registerPromise=isRegistered?UserService.deregisterUserFromTravelPlan(userId,travelPlanId):UserService.registerUserToTravelPlan(userId,travelPlanId);registerPromise.then(()=>{fetchAllTravelPlans();fetchRegisteredTravelPlans();toast.success(\"Successfully \".concat(isRegistered?'deregistered from':'registered for',\" the travel plan.\"));}).catch(error=>{console.error('Error registering/deregistering user:',error);toast.error('Error occurred. Please try again.');});};const isRegistered=travelPlanId=>{return registeredTravelPlans.some(plan=>plan.id===travelPlanId);};const handleViewDetails=travelPlanId=>{// Redirect to the view details page for the specific travel plan\nnavigate(\"/view-plan/\".concat(travelPlanId));};useEffect(()=>{fetchAllTravelPlans();fetchRegisteredTravelPlans();},[userId]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center\",children:\"All Travel Plans\"}),/*#__PURE__*/_jsx(Toaster,{}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:allTravelPlans.map(travelPlan=>/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4 mt-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"img\",{src:travelPlan.image_url,className:\"card-img-top\",width:348,height:232,alt:\"Travel Plan\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"h5\",{className:\"card-title\",children:[travelPlan.origin,\" \",/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faArrowRight}),' ',travelPlan.destination]}),/*#__PURE__*/_jsx(\"p\",{className:\"card-text\",children:travelPlan.description}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-text\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Start Date:\"}),\" \",travelPlan.start_date]}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-text\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"End Date:\"}),\" \",travelPlan.end_date]}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-text\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Budget:\"}),\" \",travelPlan.budget]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-group mt-2\",children:[isRegistered(travelPlan.id)?/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:()=>handleRegister(travelPlan.id,true),children:\"Deregister\"}):/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success\",onClick:()=>handleRegister(travelPlan.id,false),children:\"Register\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-info ml-2\",onClick:()=>handleViewDetails(travelPlan.id),children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faEye}),\" View\"]})]})]})]})},travelPlan.id))})]});}","map":{"version":3,"names":["React","useState","useEffect","UserService","FontAwesomeIcon","faEye","faArrowRight","useAuth","useNavigate","toast","Toaster","jsx","_jsx","jsxs","_jsxs","AllTravelPlanList","allTravelPlans","setAllTravelPlans","registeredTravelPlans","setRegisteredTravelPlans","userId","isAuthenticated","navigate","fetchAllTravelPlans","getAllTravelPlans","then","response","formattedData","data","map","travelPlan","start_date","Date","toLocaleDateString","end_date","catch","error","console","fetchRegisteredTravelPlans","getUserById","handleRegister","travelPlanId","isRegistered","confirmRegister","window","confirm","concat","confirmLoginOrRegister","registerPromise","deregisterUserFromTravelPlan","registerUserToTravelPlan","success","some","plan","id","handleViewDetails","children","className","src","image_url","width","height","alt","origin","icon","destination","description","budget","onClick"],"sources":["/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/AllTravelPlanList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport UserService from '../../services/UserService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { toast, Toaster } from 'react-hot-toast';\n\nexport default function AllTravelPlanList() {\n  const [allTravelPlans, setAllTravelPlans] = useState([]);\n  const [registeredTravelPlans, setRegisteredTravelPlans] = useState([]);\n  const { userId, isAuthenticated } = useAuth();\n  const navigate = useNavigate();\n\n  const fetchAllTravelPlans = () => {\n    UserService.getAllTravelPlans()\n      .then((response) => {\n        const formattedData = response.data.map((travelPlan) => ({\n          ...travelPlan,\n          start_date: new Date(travelPlan.start_date).toLocaleDateString('en-GB'),\n          end_date: new Date(travelPlan.end_date).toLocaleDateString('en-GB'),\n        }));\n  \n        setAllTravelPlans(formattedData);\n      })\n      .catch((error) => {\n        console.error('Error fetching all travel plans:', error);\n      });\n  };\n\n  const fetchRegisteredTravelPlans = () => {\n    if (!userId) {\n      return;\n    }\n    UserService.getUserById(userId)\n      .then((response) => {\n        setRegisteredTravelPlans(response.data.registeredTravelPlans);\n      })\n      .catch((error) => {\n        console.error('Error fetching registered travel plans:', error);\n      });\n  };\n\n  const handleRegister = (travelPlanId, isRegistered) => {\n    if (isAuthenticated()) {\n      const confirmRegister = window.confirm(\n        `Are you sure you want to ${\n          isRegistered ? 'deregister from' : 'register for'\n        } this travel plan?`\n      );\n      if (!confirmRegister) {\n        return;\n      }\n    } else {\n      const confirmLoginOrRegister = window.confirm(\n        'You are not logged in. Do you want to log in or register?'\n      );\n      if (confirmLoginOrRegister) {\n        navigate('/login');\n      } else {\n        navigate('/register');\n      }\n      return;\n    }\n\n    const registerPromise = isRegistered\n      ? UserService.deregisterUserFromTravelPlan(userId, travelPlanId)\n      : UserService.registerUserToTravelPlan(userId, travelPlanId);\n\n    registerPromise\n      .then(() => {\n        fetchAllTravelPlans();\n        fetchRegisteredTravelPlans();\n        toast.success(\n          `Successfully ${\n            isRegistered ? 'deregistered from' : 'registered for'\n          } the travel plan.`\n        );\n      })\n      .catch((error) => {\n        console.error('Error registering/deregistering user:', error);\n        toast.error('Error occurred. Please try again.');\n      });\n  };\n\n  const isRegistered = (travelPlanId) => {\n    return registeredTravelPlans.some((plan) => plan.id === travelPlanId);\n  };\n\n  const handleViewDetails = (travelPlanId) => {\n    // Redirect to the view details page for the specific travel plan\n    navigate(`/view-plan/${travelPlanId}`);\n  };\n\n  useEffect(() => {\n    fetchAllTravelPlans();\n    fetchRegisteredTravelPlans();\n  }, [userId]);\n\n  return (\n    <div>\n      <h2 className='text-center'>All Travel Plans</h2>\n      <Toaster />\n      <div className='row'>\n        {allTravelPlans.map((travelPlan) => (\n          <div className='col-md-4 mt-3' key={travelPlan.id}>\n            <div className='card'>\n              <img\n                src={travelPlan.image_url}\n                className='card-img-top'  width={348}\n                height={232}\n                alt='Travel Plan'\n              />\n              <div className='card-body'>\n                <h5 className='card-title'>\n                  {travelPlan.origin} <FontAwesomeIcon icon={faArrowRight} />{' '}\n                  {travelPlan.destination}\n                </h5>\n                <p className='card-text'>{travelPlan.description}</p>\n                <p className='card-text'>\n                  <strong>Start Date:</strong> {travelPlan.start_date}\n                </p>\n                <p className='card-text'>\n                  <strong>End Date:</strong> {travelPlan.end_date}\n                </p>\n                <p className='card-text'>\n                  <strong>Budget:</strong> {travelPlan.budget}\n                </p>\n                <div className='btn-group mt-2'>\n                  {isRegistered(travelPlan.id) ? (\n                    <button\n                      className='btn btn-danger'\n                      onClick={() => handleRegister(travelPlan.id, true)}\n                    >\n                      Deregister\n                    </button>\n                  ) : (\n                    <button\n                      className='btn btn-success'\n                      onClick={() => handleRegister(travelPlan.id, false)}\n                    >\n                      Register\n                    </button>\n                  )}\n                  <button\n                    className='btn btn-info ml-2'\n                    onClick={() => handleViewDetails(travelPlan.id)}\n                  >\n                    <FontAwesomeIcon icon={faEye} /> View\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}