{"ast":null,"code":"var _jsxFileName = \"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/RegisteredTravelPlanList.jsx\",\n  _s = $RefreshSig$();\n// RegisteredTravelPlanList.js\nimport React, { useState, useEffect } from 'react';\nimport UserService from '../../services/UserService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { useAuth } from '../../context/AuthContext';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisteredTravelPlanList() {\n  _s();\n  const [travelPlans, setTravelPlans] = useState([]);\n  const {\n    userId\n  } = useAuth(); // Use userId from AuthContext\n\n  const fetchTravelPlans = () => {\n    UserService.getUserById(userId).then(response => {\n      setTravelPlans(response.data.registeredTravelPlans);\n    }).catch(error => {\n      console.error('Error fetching user details:', error);\n    });\n  };\n  const handleDeregister = travelPlanId => {\n    // Display confirmation prompt\n    const confirmDeregister = window.confirm('Are you sure you want to deregister from this travel plan?');\n\n    // If user confirms, proceed with deregistration\n    if (confirmDeregister) {\n      UserService.deregisterUserFromTravelPlan(userId, travelPlanId).then(() => {\n        // Refresh travel plans after deregistration\n        fetchTravelPlans();\n      }).catch(error => {\n        console.error('Error deregistering user:', error);\n      });\n    }\n  };\n  useEffect(() => {\n    // Fetch travel plans on component mount\n    fetchTravelPlans();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Registered Travel Plans\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), travelPlans.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: [\"You have not registered for any plan yet. \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/user-home\",\n        children: \"Register for plans\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 78\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: travelPlans.map(travelPlan => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mt-3 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: travelPlan.imageUrl,\n            className: \"card-img-top\",\n            alt: \"Travel Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: [travelPlan.origin, ' ', /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faArrowRight\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), \" \", travelPlan.destination]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: travelPlan.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Start Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this), \" \", travelPlan.startDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"End Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), \" \", travelPlan.endDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Budget:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), \" \", travelPlan.budget]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => handleDeregister(travelPlan.id),\n                children: \"Deregister\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-info ml-3\",\n                onClick: () => console.log('View clicked'),\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faEye\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, this), \" View\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)\n      }, travelPlan.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisteredTravelPlanList, \"LL6jA8BrNCQ4+pvfNPlUSXV2eA0=\", false, function () {\n  return [useAuth];\n});\n_c = RegisteredTravelPlanList;\nvar _c;\n$RefreshReg$(_c, \"RegisteredTravelPlanList\");","map":{"version":3,"names":["React","useState","useEffect","UserService","FontAwesomeIcon","faEye","faArrowRight","useAuth","Link","jsxDEV","_jsxDEV","RegisteredTravelPlanList","_s","travelPlans","setTravelPlans","userId","fetchTravelPlans","getUserById","then","response","data","registeredTravelPlans","catch","error","console","handleDeregister","travelPlanId","confirmDeregister","window","confirm","deregisterUserFromTravelPlan","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","to","map","travelPlan","src","imageUrl","alt","origin","icon","destination","description","startDate","endDate","budget","onClick","id","log","_c","$RefreshReg$"],"sources":["/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/components/UserComponents/RegisteredTravelPlanList.jsx"],"sourcesContent":["// RegisteredTravelPlanList.js\nimport React, { useState, useEffect } from 'react';\nimport UserService from '../../services/UserService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { useAuth } from '../../context/AuthContext';\nimport { Link } from 'react-router-dom';\n\nexport default function RegisteredTravelPlanList() {\n  const [travelPlans, setTravelPlans] = useState([]);\n  const { userId } = useAuth(); // Use userId from AuthContext\n\n  const fetchTravelPlans = () => {\n    UserService.getUserById(userId)\n      .then((response) => {\n        setTravelPlans(response.data.registeredTravelPlans);\n      })\n      .catch((error) => {\n        console.error('Error fetching user details:', error);\n      });\n  };\n\n  const handleDeregister = (travelPlanId) => {\n    // Display confirmation prompt\n    const confirmDeregister = window.confirm('Are you sure you want to deregister from this travel plan?');\n    \n    // If user confirms, proceed with deregistration\n    if (confirmDeregister) {\n      UserService.deregisterUserFromTravelPlan(userId, travelPlanId)\n        .then(() => {\n          // Refresh travel plans after deregistration\n          fetchTravelPlans();\n        })\n        .catch((error) => {\n          console.error('Error deregistering user:', error);\n        });\n    }\n  };\n\n  useEffect(() => {\n    // Fetch travel plans on component mount\n    fetchTravelPlans();\n  }, []);\n\n  return (\n    <div>\n      <h2 className='text-center'>Registered Travel Plans</h2>\n      {travelPlans.length === 0 ? (\n        <p className='text-center'>You have not registered for any plan yet. <Link to='/user-home'>Register for plans</Link>.</p>\n      ) : (\n        <div className='row'>\n          {travelPlans.map((travelPlan) => (\n            <div className='col-md-4 mt-3 mb-4' key={travelPlan.id}>\n              <div className='card'>\n                <img\n                  src={travelPlan.imageUrl}\n                  className='card-img-top'\n                  alt='Travel Plan'\n                />\n                <div className='card-body'>\n                  <h5 className='card-title'>\n                    {travelPlan.origin}{' '}\n                    <FontAwesomeIcon icon={faArrowRight} /> {travelPlan.destination}\n                  </h5>\n                  <p className='card-text'>{travelPlan.description}</p>\n                  <p className='card-text'>\n                    <strong>Start Date:</strong> {travelPlan.startDate}\n                  </p>\n                  <p className='card-text'>\n                    <strong>End Date:</strong> {travelPlan.endDate}\n                  </p>\n                  <p className='card-text'>\n                    <strong>Budget:</strong> {travelPlan.budget}\n                  </p>\n                  <div className='btn-group'>\n                    <button\n                      className='btn btn-danger'\n                      onClick={() => handleDeregister(travelPlan.id)}\n                    >\n                      Deregister\n                    </button>\n                    <button\n                      className='btn btn-info ml-3'\n                      onClick={() => console.log('View clicked')}\n                    >\n                      <FontAwesomeIcon icon={faEye} /> View\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}