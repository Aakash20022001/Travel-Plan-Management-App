{"ast":null,"code":"var _jsxFileName = \"/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthProvider.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [userId, setUserId] = useState(null);\n  const [token, setToken] = useState(null);\n  const [role, setRole] = useState(null);\n  const navigate = Navigate;\n  const login = (userId, token, role) => {\n    setUserId(userId);\n    setToken(token);\n    setRole(role);\n    localStorage.setItem('userId', userId);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n  };\n  const logout = () => {\n    setUserId(null);\n    setToken(null);\n    setRole(null);\n    localStorage.removeItem('userId');\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    navigate('/user-home');\n  };\n  useEffect(() => {\n    // Attempt to retrieve the token, userId, and role from localStorage on component mount\n    const storedUserId = localStorage.getItem('userId');\n    const storedToken = localStorage.getItem('token');\n    const storedRole = localStorage.getItem('role');\n    if (storedUserId && storedToken && storedRole) {\n      setUserId(storedUserId);\n      setToken(storedToken);\n      setRole(storedRole);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      userId,\n      login,\n      logout,\n      token,\n      role\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"kgxidIswGJ1orMrwu1NtRjVZW8g=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  const {\n    userId,\n    login,\n    logout,\n    token,\n    role\n  } = context;\n  const isAuthenticated = () => !!token;\n  return {\n    userId,\n    login,\n    logout,\n    isAuthenticated,\n    token,\n    role\n  };\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","Navigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","userId","setUserId","token","setToken","role","setRole","navigate","login","localStorage","setItem","logout","removeItem","storedUserId","getItem","storedToken","storedRole","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","isAuthenticated","$RefreshReg$"],"sources":["/Users/aakashsikarwar/Desktop/React SpringBoot App/travel_plan_management_system1/src/context/AuthContext.jsx"],"sourcesContent":["// AuthProvider.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [userId, setUserId] = useState(null);\n  const [token, setToken] = useState(null);\n  const [role, setRole] = useState(null);\nconst navigate=Navigate\n  const login = (userId, token, role) => {\n    setUserId(userId);\n    setToken(token);\n    setRole(role);\n    localStorage.setItem('userId', userId);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n  };\n\n  const logout = () => {\n    setUserId(null);\n    setToken(null);\n    setRole(null);\n    localStorage.removeItem('userId');\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    navigate('/user-home');\n  };\n\n  useEffect(() => {\n    // Attempt to retrieve the token, userId, and role from localStorage on component mount\n    const storedUserId = localStorage.getItem('userId');\n    const storedToken = localStorage.getItem('token');\n    const storedRole = localStorage.getItem('role');\n\n    if (storedUserId && storedToken && storedRole) {\n      setUserId(storedUserId);\n      setToken(storedToken);\n      setRole(storedRole);\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ userId, login, logout, token, role }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  const { userId, login, logout, token, role } = context;\n\n  const isAuthenticated = () => !!token;\n\n  return { userId, login, logout, isAuthenticated, token, role };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}